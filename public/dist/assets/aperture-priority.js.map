{
  "version": 3,
  "sources": ["../../../src/js/aperture-priority.js"],
  "sourcesContent": ["const switcher = document.querySelector('.switcher')\nconst options = document.querySelectorAll('.options.normal-colors span')\nconst slider = document.querySelector('.slider')\nconst activeOptions = slider.querySelector('.active-options')\n\n// Layout containers\nconst regularLayout = document.querySelector('.regular-layout')\nconst ortholinearLayout = document.querySelector('.ortholinear-layout')\n\n// Utility to sync widths of active and normal options\nfunction syncWidths() {\n  const normalWidth = switcher.querySelector('.normal-colors').offsetWidth\n  activeOptions.style.width = `${normalWidth}px`\n}\n\n// Function to toggle layouts based on selected option\nfunction toggleLayouts(selectedOption) {\n  if (selectedOption.textContent.trim() === 'Regular') {\n    regularLayout.style.display = 'block'\n    ortholinearLayout.style.display = 'none'\n  } else if (selectedOption.textContent.trim() === 'Ortholinear') {\n    regularLayout.style.display = 'none'\n    ortholinearLayout.style.display = 'block'\n  }\n}\n\n// Function to position the slider and active options\nfunction positionSlider(selectedOption) {\n  const switcherRect = switcher.getBoundingClientRect()\n  const selectedRect = selectedOption.getBoundingClientRect()\n\n  // Sync widths\n  syncWidths()\n\n  // Check if the first option is selected\n  if (selectedOption === options[0]) {\n    slider.style.transform = `translateX(0)`\n    slider.style.width = `${selectedRect.width}px`\n    activeOptions.style.transform = `translateX(0)`\n    toggleLayouts(selectedOption)\n    return\n  }\n\n  // Calculate the transform distance\n  const left = selectedRect.left - switcherRect.left\n  const width = selectedRect.width\n\n  // Move slider and set its width\n  slider.style.transform = `translateX(${left}px)`\n  slider.style.width = `${width}px`\n\n  // Move active options in the opposite direction\n  activeOptions.style.transform = `translateX(${-left}px)`\n\n  // Toggle layouts\n  toggleLayouts(selectedOption)\n}\n\n// Toggle between the two options\nfunction toggleSwitch() {\n  const activeOption = document.querySelector('.options .active') || options[0]\n  const nextOption = activeOption === options[0] ? options[1] : options[0]\n  positionSlider(nextOption)\n  options.forEach(opt => opt.classList.remove('active'))\n  nextOption.classList.add('active')\n}\n\n// Initialize slider on load\nwindow.addEventListener('DOMContentLoaded', () => {\n  const selectedOption = document.querySelector('.options .active') || options[0]\n  positionSlider(selectedOption)\n})\n\n// Handle clicks to toggle between options\nswitcher.addEventListener('click', toggleSwitch)\n\n// Recalculate dimensions on window resize\nwindow.addEventListener('resize', () => {\n  syncWidths() // Keep widths consistent on resize\n  const selectedOption = document.querySelector('.options .active') || options[0]\n  positionSlider(selectedOption)\n})\n\ndocument.querySelectorAll('.vendor-list__container__item__link').forEach(element => {\n  element.addEventListener('mouseenter', function() {\n    var dataValue = this.getAttribute('data-local');\n    var dataDisplayDiv = document.getElementById('dataDisplay');\n    dataDisplayDiv.innerHTML = dataValue;\n    dataDisplayDiv.classList.add('visible');\n  });\n  \n  element.addEventListener('mouseleave', function() {\n    var dataDisplayDiv = document.getElementById('dataDisplay');\n    dataDisplayDiv.innerHTML = '';\n    dataDisplayDiv.classList.remove('visible');\n  });\n});\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Ensure that the LocomotiveScroll instance is accessible globally\n  if (typeof window.locomotiveScrollInstance !== 'undefined') {\n    // Marquee function for continuous text effect\n    function Marquee(selector, speed) {\n      const parentSelector = document.querySelector(selector);\n      const clone = parentSelector.innerHTML;\n      const firstElement = parentSelector.children[0];\n      let i = 0;\n      parentSelector.insertAdjacentHTML('beforeend', clone);\n      parentSelector.insertAdjacentHTML('beforeend', clone);\n\n      setInterval(function() {\n        firstElement.style.marginLeft = `-${i}px`;\n        if (i > firstElement.clientWidth) {\n          i = 0;\n        }\n        i += speed;\n      }, 0);\n    }\n\n    // Scroll interactions for 'vendorList' and 'artisan' elements\n    window.locomotiveScrollInstance.on('scroll', (args) => {\n      // Handle vendor list progress\n      if (args.currentElements['vendorList']) {\n        let vendorListProgress = args.currentElements['vendorList'].progress;\n        document.getElementById('vendor-list').style.transform = `translateY(${250 - (vendorListProgress * 500)}px)`;\n      }\n\n      // Handle artisan progress\n      if (args.currentElements['artisan']) {\n        let artisanProgress = args.currentElements['artisan'].progress;\n        document.getElementById('artisan').style.transform = `scale(${1 + (artisanProgress / 2)})`;\n      }\n    });\n\n    // Initialize Marquee\n    Marquee('#marquee', 0.5);\n\n    // Function to scroll to vendor section\n    function scrollToVendor() {\n        // Get the target element\n        const vendorSection = document.querySelector('#vendor-list-wrapper');\n\n        // Scroll to the vendor section\n        window.locomotiveScrollInstance.scrollTo(vendorSection);\n    }\n\n    // Add event listener to the button\n    const scrollButton = document.getElementById('scrollButton');\n    scrollButton.addEventListener('click', scrollToVendor);\n    \n  } else {\n    console.log('LocomotiveScroll instance not found. Ensure it is initialized in global.js and is accessible globally.');\n    function scrollToVendor() {\n        // Get the target element\n        const vendorSection = document.querySelector('#vendor-list-wrapper');\n\n        // Scroll to the vendor section\n      vendorSection.scrollIntoView({ behavior: 'smooth' });\n      console.log('hello');\n    }\n\n    const scrollButton = document.getElementById('scrollButton');\n    scrollButton.addEventListener('click', scrollToVendor);\n    \n  }\n\n  \n\n\n});\n"],
  "mappings": "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",
  "names": ["switcher", "options", "slider", "activeOptions", "regularLayout", "ortholinearLayout", "syncWidths", "normalWidth", "toggleLayouts", "selectedOption", "positionSlider", "switcherRect", "selectedRect", "left", "width", "toggleSwitch", "nextOption", "opt", "element", "dataValue", "dataDisplayDiv", "Marquee", "selector", "speed", "parentSelector", "clone", "firstElement", "i", "scrollToVendor", "vendorSection", "args", "vendorListProgress", "artisanProgress"]
}
